# GitHub Comment Templates
# Templates for automated PR comments and discussions

templates:
  
  # Critical severity template
  critical:
    emoji: "üö®"
    prefix: "**CRITICAL**"
    template: |
      {emoji} {prefix} Anti-pattern detected: {title}
      
      **Issue**: {description}
      
      **Location**: `{filename}:{line_number}`
      
      **Security Risk**: {security_impact}
      
      **Problem**:
      ```elixir
      {bad_example}
      ```
      
      **Required Fix**:
      ```elixir
      {good_example}
      ```
      
      **Why This Matters**: {explanation}
      
      **Time Estimate**: ~{time_minutes} minutes to fix
      **Breaking Change Risk**: {breaking_change_risk}
      
      **References**: 
      - [Pattern Documentation]({pattern_link})
      - [Style Guide Reference]({style_guide_link})
      
      ‚ö†Ô∏è **BLOCKING**: This issue must be resolved before merge.
      
  # High severity template  
  high:
    emoji: "‚ö†Ô∏è"
    prefix: "**HIGH PRIORITY**"
    template: |
      {emoji} {prefix} Code quality issue: {title}
      
      **Issue**: {description}
      
      **Location**: `{filename}:{line_number}`
      
      **Problem**:
      ```elixir
      {bad_example}
      ```
      
      **Suggested Fix**:
      ```elixir
      {good_example}
      ```
      
      **Impact**: {explanation}
      
      **Time Estimate**: ~{time_minutes} minutes
      
      **References**: [{pattern_name}]({pattern_link})
      
  # Medium severity template
  medium:
    emoji: "üîµ"
    prefix: "**IMPROVEMENT**"
    template: |
      {emoji} {prefix} Refactoring opportunity: {title}
      
      **Suggestion**: {description}
      
      **Location**: `{filename}:{line_number}`
      
      **Current**:
      ```elixir
      {bad_example}
      ```
      
      **Improved**:
      ```elixir
      {good_example}
      ```
      
      **Benefits**: {explanation}
      
      **Time**: ~{time_minutes} minutes | **Risk**: {breaking_change_risk}
      
  # Low severity template
  low:
    emoji: "üü¢"
    prefix: "**SUGGESTION**"
    template: |
      {emoji} {prefix} {title}
      
      **Location**: `{filename}:{line_number}`
      
      **Suggestion**: {description}
      
      **Quick fix** (~{time_minutes}min):
      ```elixir
      {good_example}
      ```
      
  # Summary template for PR description
  pr_summary:
    template: |
      ## ü§ñ Automated Code Review Summary
      
      **Total Issues Found**: {total_issues}
      **Estimated Fix Time**: {total_time_hours} hours
      **Estimated Cost Savings**: ${cost_savings}
      
      ### Issues by Severity:
      - üö® **Critical**: {critical_count} (must fix before merge)
      - ‚ö†Ô∏è **High**: {high_count}
      - üîµ **Medium**: {medium_count}
      - üü¢ **Low**: {low_count}
      
      ### Categories:
      - **Architectural**: {architectural_count}
      - **File-level**: {file_level_count}
      - **One-liners**: {one_liner_count}
      - **Integrations**: {integration_count}
      
      ### Quick Wins (< 10 min each):
      {quick_wins_list}
      
      **Next Steps**:
      1. Address critical security issues first
      2. Focus on high-priority items
      3. Batch similar issues for efficiency
      
      *Generated by [Elixir Code Review Framework](https://github.com/VMWepinion/elixir-code-review)*
      
# Comment settings
settings:
  max_comment_length: 2000
  include_code_context: true
  context_lines_before: 2
  context_lines_after: 2
  batch_similar_issues: true
  create_separate_discussions: true
  
# Batching rules
batching:
  group_by_pattern: true
  group_by_file: true
  max_issues_per_comment: 3
  separate_critical_issues: true